'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'insertionSort1' function below.
 *
 * The function accepts following parameters:
 *  1. INTEGER n
 *  2. INTEGER_ARRAY arr
 */

function insertionSort1(n, arr) {
    // Write your code here
    
        let j=n-1;
        if(arr[j]<arr[j-1]){
            let temp=arr[j];
        
        while(j>0){
            if(temp<arr[j-1]){
                arr[j]= arr[j-1];
                j--;
            }
            else{
                arr[j]=temp;
                for(let i=0; i<n; i++){
                    process.stdout.write(arr[i] + " ")
                    }
            process.stdout.write("\n")
            break;
            }
            for(let i=0; i<n; i++){
                process.stdout.write(arr[i] + " ")
            }
            process.stdout.write("\n")
            
            
        }
            if (temp < arr[0]) {
      arr[0] = temp;
      for (let i = 0; i < n; i++) {
        process.stdout.write(arr[i] + " ");
      }
      process.stdout.write("\n");
    }
        
        }
    

}

function main() {
    const n = parseInt(readLine().trim(), 10);

    const arr = readLine().replace(/\s+$/g, '').split(' ').map(arrTemp => parseInt(arrTemp, 10));

    insertionSort1(n, arr);
}
